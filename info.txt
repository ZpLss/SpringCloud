SpringBoot服务开发
Rest服务调用
Eureka服务注册与发现   7001  7002  7003
Ribbon负载均衡
    是基于netflix ribbon实现的一套客户端的   负载均衡的工具
    主要功能是提供客户端的软件负载均衡算法，将Netflix的中间层服务链接在一起，Ribbon客户端组件提供一系列完善的配置如连接超时
    ，重试等。简单的说就是在配置文件中列出Load Balancer（简称 LB）后面所有的机器，Ribbon会自动的帮助你基于某种规则（如简单轮询
    ，随即连接等）。我们也很容易使用Ribbon实现自定义的负载均衡算法。
    LB，既负载均衡（Load Balancer），在微服务或分布式集群中经常用的一种应用。SpringCloud的负载均衡算法可以自定义。
Feign服务接口调用(负载均衡)
    Feign是一个声明式的Web服务客户端，使得编写Web服务客户端变得非常容易。
    只需要创建一个接口，然后在上面添加注解即可。
Hystrix断路器
    Hystrix默认的超时时间是1秒，如果超过这个时间尚未响应，将会进入fallback代码
    熔断机制是应对雪崩效应的一种微服务链路保护机制。
    当扇出链路的某个微服务不可用或者响应时间太长，会进行服务的降级，进而熔断该节点微服务的调用，快速返回“错误”的响应
    信息，当检测到该节点微服务调用响应正常后恢复调用链路，在SpringCloudk框架里熔断机制通过Hystrix实现，Hystix会监控微服务
    间调用的状况，当失败的调用到一定阀值，缺省是5秒内调用20次调用失败就会启动熔断机制。
    熔断机制注解是：@HystrixCommand
    服务降级：
        所谓降级，一般是从整体负荷考虑，就是当某个服务熔断后，服务器将不在被调用，此时客户端可以自己准备一个本地的fallback
        回调，返回一个缺省值，这样做，虽然服务水平下降，但好歹可用，比直接挂掉要强。
HystrixDashboard服务监控
    准实时的调用监控，Hystrix会持续的记录所有通过hystrix发起的请求信息，并以统计报表和图形的方式展现给用户。
    七色 一圈 一线
    实心圆：颜色的变化代表了健康的成都，绿色<黄色<橙色<红色递减。该实心圆除了颜色变化之外，它的大小会根据实例的请求
    流量发生变化，流量越大该实心圆就越大，通过该实心圆的展示可以快速的发现故障实例和高压力实例。
    曲线：用来记录2分钟内流量的相对变化，可以通过它来观察到流量的上升和下降趋势。
    七色：
        绿色： 成功数
        蓝色： 容断数
        天蓝： 错误请求数
        黄色： 超时数
        紫色： 线程池拒绝数
        红色： 失败/异常数
        灰色： 最近10s错误百分比
        Host：0.0/s  服务请求频率
        Circuit Closed 断路状态
Zuul路由网关
    包含了对请求的路由和过滤两个最主要的功能：
        其中路由功能负责将外部请求转发到具体的微服务实例上，是实现外部访问统一入口的基础而过滤器功能负责对请求的处理过
        程进行干预，是实现请求校验，服务聚合等功能的基础，Zuul和Eureak进行整合，将Zuul自身注册为Eureak服务治理下的应用，
        同时从Eureka中获得其他微服务的消息，也即以后的访问微服务都是通过Zuul跳转后获得的。
        注意：
            Zuul服务最终还是会注册进Eureka
        提示 = 代理 + 路由 + 过滤三大功能
Spring Cloud Config 分布式配置中心
    微服务架构中的微服务提供集中化的外部配置支持，配置服务为各个不同微服务应用的所有环境提供了一个中心化的外部配置